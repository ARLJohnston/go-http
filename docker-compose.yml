services:
  front-end:
    container_name: front-end
    build: ./front
    ports:
      - "3000:3000"
    environment:
      GRPC_TARGET: client:50051
    networks:
      - front-end
    depends_on:
      - client

  client:
    container_name: client
    build: ./server
    ports:
      - "50051:50051"
    environment:
      MYSQL_DATABASE_ADDRESS: db:3306
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: userpass
    networks:
      - front-end
      - back-end
    depends_on:
      - db

  db:
    container_name: mysql
    image: mysql:8.0-bookworm
    volumes:
      - .:/docker-entrypoint-initdb.d
      - ./server/create-tables.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "3306:3306/tcp"
      - "33060:33060/tcp"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: userpass
      MYSQL_DATABASE: album
    restart: "unless-stopped"
    networks:
      - back-end

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - back-end
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - front-end
      - back-end

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - "9100:9100"
    networks:
      - front-end
      - back-end

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - front-end
      - back-end
    depends_on:
      - prometheus

networks:
  front-end:
    driver: bridge
  back-end:
    driver: bridge
